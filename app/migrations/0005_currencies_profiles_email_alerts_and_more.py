# Generated by Django 5.0.6 on 2024-08-11 10:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0004_alter_notifications_title_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Currencies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='GBP', max_length=3)),
                ('name', models.CharField(max_length=50)),
                ('sign', models.CharField(max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=6, max_digits=10)),
            ],
        ),
        migrations.AddField(
            model_name='profiles',
            name='email_alerts',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profiles',
            name='preferred_currency',
            field=models.CharField(blank=True, choices=[('GBP', 'GBP'), ('USD', 'USD'), ('EUR', 'EUR')], default='GBP', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='account_manager',
            field=models.CharField(blank=True, default='not assigned', help_text='Assign a Trader for this user.', max_length=255, verbose_name='Account Manager'),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='can_login',
            field=models.BooleanField(default=True, help_text='Decide whether this account can login, True by default', verbose_name='Account Access'),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='can_withraw',
            field=models.BooleanField(default=False, help_text='Give this user the ability to withdraw. By default, the user will not be able to withdraw', verbose_name='Withdrawal Access'),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='pin',
            field=models.IntegerField(default=0, help_text='This PIN is automatically generated but not shown to the user. Without this PIN, the user will not be able to withdraw. You can optionally mail this PIN to the user after they meet your conditions', verbose_name='Withdrawal pin'),
        ),
        migrations.AlterField(
            model_name='profiles',
            name='withdrawal_limit',
            field=models.DecimalField(decimal_places=2, default=7000.0, help_text='Set the minimum amount this user can withdraw. helpful if you want to control the withdrwal behaviour so that the user will need to top up their account to meet the minimum amount', max_digits=10, verbose_name='Minimum withdrawal'),
        ),
        migrations.CreateModel(
            name='BalanceEUR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deposits', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('bonus', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('profits', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='euro_balance', to='app.profiles')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceUSD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deposits', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('bonus', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('profits', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='usd_balance', to='app.profiles')),
            ],
        ),
    ]
